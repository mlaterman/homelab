- name: Create foundry group
  ansible.builtin.group:
    name: "{{ foundry_group }}"
    system: true
    state: present
  become: true

- name: Create foundry user
  ansible.builtin.user:
    name: "{{ foundry_user }}"
    groups: "{{ foundry_group }}"
    system: true
    shell: /bin/nologin
    state: present
  become: true

- name: Create foundry dir
  ansible.builtin.file:
    path: "{{ foundry_dir }}"
    state: directory
    owner: "{{ foundry_user }}"
    group: "{{ foundry_group }}"
    mode: '0755'
  become: true

- name: Create fallback data dir
  ansible.builtin.file:
    path: /home/foundry/.local/share/FoundryVTT
    state: directory
    owner: "{{ foundry_user }}"
    group: "{{ foundry_group }}"
    mode: '0755'
    recurse: true
  become: true

- name: Install prereqs
  ansible.builtin.package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - python3
      - python3-pip
      - python3-debian
    state: present
  become: true

- name: Remove old NodeSource key
  ansible.builtin.apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    state: absent
  become: true

- name: Remove old Nodejs 14.x (lts) repo
  ansible.builtin.apt_repository:
    repo: deb https://deb.nodesource.com/node_14.x {{ ansible_distribution_release }} main
    state: absent
  become: true

- name: Add NodeSource repo
  ansible.builtin.deb822_repository:
    name: nodesource_{{ foundry_nodejs_version }}
    uris: https://deb.nodesource.com/node_{{ foundry_nodejs_version }}
    types: deb
    suites: nodistro
    components: main
    signed_by: https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key
    state: present
  become: true

- name: Install requirements
  ansible.builtin.package:
    name:
      - unzip
      - libssl-dev
      - nodejs
    state: present
  become: true

- name: Unarchive foundry
  ansible.builtin.unarchive:
    src: "{{ foundry_download_url }}"
    remote_src: true
    dest: "{{ foundry_dir }}"
    owner: "{{ foundry_user }}"
    group: "{{ foundry_group }}"
    mode: '0755'
    creates: "{{ foundry_dir }}/resources/app/main.js"
  become: true

- name: Create foundry data dir
  ansible.builtin.file:
    path: "/data/FoundryVTT"
    state: directory
    owner: "{{ foundry_user }}"
    group: "{{ foundry_group }}"
    mode: '0755'
  become: true

- name: Create foundry user config dir
  ansible.builtin.file:
    path: "/data/FoundryVTT/Config"
    state: directory
    owner: "{{ foundry_user }}"
    group: "{{ foundry_group }}"
    mode: '0755'
  become: true

- name: Create foundry config
  ansible.builtin.template:
    src: options.json.j2
    dest: "/data/FoundryVTT/Config/options.json"
    owner: "{{ foundry_user }}"
    group: "{{ foundry_group }}"
    mode: '0644'
  become: true
  notify: Restart foundry

- name: Copy admin key to server
  ansible.builtin.template:
    src: adminKey.j2
    dest: "/data/adminKey"
    owner: "{{ foundry_user }}"
    group: "{{ foundry_group }}"
    mode: '0600'
  become: true
  notify: Restart foundry

- name: Copy service file
  ansible.builtin.template:
    src: foundryvtt.service.j2
    dest: /etc/systemd/system/foundryvtt.service
    mode: '0644'
  become: true
  notify: Restart foundry

- name: Ensure logrotate is installed
  ansible.builtin.package:
    name: logrotate
    state: present
  become: true

- name: Configure foundry log rotation
  ansible.builtin.template:
    src: logrotate.j2
    dest: /etc/logrotate.d/foundryvtt
    mode: '0644'
  become: true
