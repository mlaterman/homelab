- name: Check if radarr is installed
  ansible.builtin.stat:
    path: /opt/Radarr/Radarr
  register: stat_radarr

- name: Create radarr user
  ansible.builtin.user:
    name: radarr
    group: media
    system: true
    shell: /sbin/nologin
    state: present
  become: true

- name: Create directories
  ansible.builtin.file:
    path: /var/lib/radarr
    owner: radarr
    group: media
    state: directory
    mode: '0755'
  become: true

- name: Install prereqs
  ansible.builtin.package:
    name:
      - curl
      - sqlite3
    state: present
  become: true

- name: Get radarr
  ansible.builtin.get_url:
    url: http://radarr.servarr.com/v1/update/master/updatefile?os=linux&runtime=netcore&arch=x64&version={{ radarr_version }}
    dest: /tmp/radarr.master.{{ radarr_version }}.linux.tar.gz
    mode: '0644'
  when: not stat_radarr.stat.exists

- name: Unarchive radarr
  ansible.builtin.unarchive:
    src: /tmp/radarr.master.{{ radarr_version }}.linux.tar.gz
    remote_src: true
    owner: radarr
    group: media
    dest: /opt/
    creates: /opt/Radarr/Radarr
  become: true
  when: not stat_radarr.stat.exists
  notify: Start radarr

- name: Remove download
  ansible.builtin.file:
    path: /tmp/radarr.master.{{ radarr_version }}.linux.tar.gz
    state: absent
  become: true

- name: Template radarr
  ansible.builtin.template:
    src: radarr.service.j2
    dest: /etc/systemd/system/radarr.service
    mode: '0644'
  become: true
  notify: Start radarr
